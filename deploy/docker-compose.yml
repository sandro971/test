version: "3.7"
services:     
    mongo:
        image: mongo:4.0.3
        restart: always
        ports:
           #port 7777 utilisé pour les tests
            - 0.0.0.0:7777:27017
        volumes:
            - mongodata:/data/db
        environment:
            MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
            MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
            MONGO_INITDB_USERNAME: ${MONGO_INITDB_USERNAME}
            MONGO_INITDB_PASSWORD: ${MONGO_INITDB_PASSWORD}
        networks:
            oclock:
                aliases:
                    - ${MONGO_HOST}


    api:
        hostname: api
        image: node
        restart: always
        command: >
            /bin/bash -c "
            cd /app 
            && npm install
            && npm start"
        volumes:
            - "../back:/app"
            - "../front:/app/public"
        depends_on:
            - mongo
        ports:
            # rend accessible l'api pour la machine hôte
            - 0.0.0.0:${API_PORT}:80
        expose:
            - ${API_PORT}
        environment:
            MONGO_HOST: ${MONGO_HOST}
            MONGO_PORT: ${MONGO_PORT}
            MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
            MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
            API_PORT: ${API_PORT}
        tty: true
        networks:
            oclock:
                aliases:
                    - api

networks:
    oclock:
        driver: bridge
        driver_opts:
            com.docker.network.bridge.name: br-oclock

volumes:
    mongodata:
        driver: local